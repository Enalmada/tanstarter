# Rules file for AI assistance

# Update this file when making major architectural changes

# Helps AI understand project context and preferences

<framework_preferences>

1. Framework Requirements:

- TanStack Router for routing
- TanStack Query for data fetching
- TanStack Table for data grids
- TanStack Form for form handling
- TypeScript required
- React Context for client state

2. UI Components:

- NextUI (@nextui-org/react)
- Lucide Icons
- Tailwind CSS

3. Data Layer:

- Drizzle ORM for database operations
- Drizzle-valibot for schema validation
- PostgreSQL (via Neon) as database
- TanStack Start server functions for API

4. Validation Patterns:

- Use drizzle-valibot to define base schemas from database tables
- Derive form and API schemas from base drizzle-valibot schemas
- Reuse schemas across client and server validation
- Prefer server-side validation as final authority

5. Error Handling:

- Use ValiError for validation errors
- Propagate errors to UI with proper typing
- Include error boundaries at route level

6. Type Safety:

- Prefer inference over explicit types when possible
- Use strict TypeScript checks
- Maintain end-to-end type safety with Drizzle

7. Technical Notes:

- Uses app.config.ts instead of vite.config.ts
- All server functions must use TanStack Start patterns
- Database operations should use Drizzle query builder
- Run "bun lint" and "bun check-types" after changes
  </framework_preferences>

<code_style>

- Tabs for indentation (not spaces)
- Double quotes for strings
- Follow Biome's import organization
- Match biome.json linting rules
  </code_style>

<automation_preferences>

- Run type checking after file changes
- Run linting after file changes
- Fix auto-fixable lint issues automatically
  </automation_preferences>
